clc;
clear;
close all;



m = [1,1,1,0];
k = length(m); % msg length
n = 7; %block length
p = [1,1,1; 0,0,1; 1,0,1; 0,1,1 ]; %parity matrix k*(n-k)
I = eye(k); % identity matrix k*k
G=[I p]; %generator matrix
H = [p' eye(n-k)]; %parity check matrix
C = mod(m*G,2); %Coded matrix
r=C;
e=randi([1,n],1);
r(e)=~r(e);
rT = r';
S=mod(r*H',2);
find = 0;
for ii = 1:n
if ~find
errvect = zeros(1,n);
errvect(ii) = 1;
search = mod(errvect * H',2);
if search == S
find = 1;
index = ii;
end
end
end
corrected = r;
corrected(index) =~r(index);
rcd = corrected(1:k);
disp(['Original Message']);m
disp(['Generator Matrix']);G
disp(['Coded Block']);C
disp(['Recieved Block']);r
disp(['Syndrome']);S
disp(['Error Index']);index
disp(['Corrected Block']);corrected
disp(['The Message']);rcd
clc
clear all close all
BER = zeros(1,26); BER1 = zeros(1,26); for SNR = 0:1:25
no_of_err_bit = 0;
no_of_err_bit_wo = 0; for i = 1:25000
message = randi([0,1],1,4);
parity_matrix = [[1 1 0]; [0 1 1]; [1 1 1]; [1 0 1]]; identity_matrix = eye(4);
G = [parity_matrix,identity_matrix]; C = mod(message*G,2); received_signal = awgn(C,SNR); 
for i = 1:length(received_signal)
if (received_signal(i) < 0.5) received_signal(i) = 0;
else
received_signal(i) = 1; end
end
H = [eye(3), parity_matrix.'];
S = mod(received_signal*(H.'),2); if (S == [0 0 0])
Correction = [0 0 0 0 0 0 0];
elseif (S == [1 0 0])
Correction = [1 0 0 0 0 0 0];
elseif (S == [0 1 0])
Correction = [0 1 0 0 0 0 0];
elseif (S == [0 0 1])
Correction = [0 0 1 0 0 0 0];
elseif (S == [1 1 0])
Correction = [0 0 0 1 0 0 0];
elseif (S == [0 1 1])
Correction = [0 0 0 0 1 0 0];
elseif (S == [1 1 1])
Correction = [0 0 0 0 0 1 0];
else (S == [1 0 1])
Correction = [0 0 0 0 0 0 1]; end
received_signal_without_correction = received_signal; index = find(Correction==1);
received_signal(index) = ~(received_signal(index));
for j = 1:length(C)
if C(j) ~= received_signal(j) no_of_err_bit = no_of_err_bit + 1;
end
end
for k = 1:length(C)
if C(k) ~= received_signal_without_correction(k) no_of_err_bit_wo = no_of_err_bit_wo + 1;
end
end
end
BER(SNR+1) = no_of_err_bit/100000; BER1(SNR+1) = no_of_err_bit_wo/100000;
end
semilogy(0:1:25,BER1,0:1:25,BER);title("BER vs SNR graph"); xlabel('SNR(in db)');
ylabel('BER');grid on;



m = [1,1,1,0,1];
k = length(m); % msg length
n = 8; %block length
p = [1,1,1; 8,0,1; 1,8,1; 8,1,1; 1,1,0 ]; %parity matrix k* (n-k)
I =eye(k); % identity matrix k*k
G=[I p]; %generator matrix
H=[p' eye(n-k)]; %parity check matrix
C = mod (m*G,2); %Coded matrix
r=C;
e=randi ([1,n], 1);
r(e)=~r(e);
rT=r';
S=mod(r*H',2);
find=0;
for ii= 1:n
if ~ find 
    errvect= zeros(1,n); 
    errvect (ii) = 1; 
    search= mod(errvect * H',2); 
    if search== S 
        Find= 1; 
        index= ii;
end
end
end
corrected =r;
corrected(index) =~r(index); 
rcd =corrected(1:k);
disp(['Original Message']);m 
disp(['Generator Matrix']);G 
disp(['Coded Block']);C 
disp(['Recieved Block']);r 
disp(['Syndrome']);S 
disp(['Error Index']); index 
disp(['Corrected Block']); corrected 
disp(['The Message']); rcd

